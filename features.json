[
    {
        "section": "",
        "abilities": [
            {
                "what": "Name",
                "how": {
                    "ack": "ack",
                    "ag": "The Silver Searcher",
                    "git": "git-grep",
                    "gnu": "GNU grep",
                    "rg": "ripgrep"
                }
            },
            {
                "what": "Project page",
                "how": {
                    "ack": "https://beyondgrep.com",
                    "ag": "https://geoff.greer.fm/ag/",
                    "git": "https://git-scm.com/docs/git-grep",
                    "gnu": "https://www.gnu.org/software/grep/",
                    "rg": "https://github.com/BurntSushi/ripgrep"
                }
            },
            {
                "what": "Language",
                "how": {
                    "ack": "Perl",
                    "ag": "C",
                    "git": "C",
                    "gnu": "C",
                    "rg": "Rust"
                }
            },
            {
                "what": "License",
                "how": {
                    "ack": "Artistic License 2.0",
                    "ag": "Apache License 2.0",
                    "git": "GPL 2",
                    "gnu": "GPL 3",
                    "rg": "MIT/Unlicense"
                }
            },
            {
                "what": "Regular expressions",
                "how": {
                    "freebsd,osx": "basic, extended",
                    "git": "Basic, extended, or Perl-compatible",
                    "gnu": "Basic, extended, or Perl-compatible (experimental)",
                    "ack": "Native Perl",
                    "ag": "Perl-compatible",
                    "rg": "Fast non-backtracking, Perl-compatible, or automatic selection"
                }
            }
        ]
    },
    {
        "section": "Feature",
        "abilities": [
            {
                "what": "Search where",
                "how": {
                    "ack,ag,gnu,rg": "anywhere",
                    "git": "git repository by default, or anywhere with --no-index"
                }
            },
            {
                "what": "Search git history",
                "how": {
                    "git": "yes"
                }
            },
            {
                "what": "Include/exclude files by filetype",
                "how": {
                    "ack,ag,rg": "yes"
                }
            },
            {
                "what": "Specify filetype by file extension",
                "how": {
                    "ack,ag,rg": "yes"
                }
            },
            {
                "what": "Specify filetype by pattern match on filename",
                "how": {
                    "ack,ag,gnu,rg": "yes"
                }
            },
            {
                "what": "Specify filetype by pattern match on first line of file",
                "how": {
                    "ack": "yes"
                }
            },
            {
                "what": "Configuration file",
                "how": {
                    "ack": "System-, user- and project-level",
                    "git": "System-, user- and project-level",
                    "rg": "Specified by RIPGREP_CONFIG_PATH environment variable"
                }
            },
            {
                "what": "Ignore files based on .gitignore or .ignore files",
                "how": {
                    "ag,git,rg": "yes"
                }
            },
            {
                "what": "Parallelism",
                "how": {
                    "ag,git,rg": "yes, threads"
                }
            },
            {
                "what": "Deterministic output",
                "how": {
                    "ack": "yes, using --sort-files",
                    "rg": "yes, using --sort path"
                }
            },
            {
                "what": "Match patterns across newlines",
                "how": {
                    "ag,rg": "yes"
                }
            },
            {
                "what": "Smart case searching",
                "how": {
                    "ack,ag,rg": "yes"
                }
            },
            {
                "what": "Multiple patterns with boolean expressions",
                "how": {
                    "git": "yes"
                }
            },
            {
                "what": "Print lines by number",
                "how": {
                    "ack": "yes"
                }
            },
            {
                "what": "Show proximity of matches to other matches",
                "how": {
                    "ack": "yes, in ack 3"
                }
            },
            {
                "what": "Build output for each line based on match groups",
                "how": {
                    "ack": "yes",
                    "rg": "yes"
                }
            },
            {
                "what": "Limit length of output lines",
                "how": {
                    "ag,rg": "yes"
                }
            },
            {
                "what": "Underline matches to show matches w/o color",
                "how": {
                    "ack": "yes"
                }
            },
            {
                "what": "Search in gzip files",
                "how": {
                    "ag,rg": "yes"
                }
            }
        ]
    },
    {
        "section": "Searching",
        "type": "options",
        "abilities": [
            {
                "what": "Ignore case",
                "how": {
                    "ack,ag,freebsd,git,gnu,netbsd,osx,rg": "-i --ignore-case",
                    "bsd,posix": "-i"
                }
            },
            {
                "what": "Smart case searching (case-insensitive unless the pattern contains a capital letter)",
                "how": {
                    "ack,ag,rg": "-S --smart-case"
                }
            },
            {
                "what": "Re-enable case-sensitive search over case-insensitive or smart-case search",
                "how": {
                    "ack": "-I",
                    "ag,rg": "-s --case-sensitive",
                    "git": "--no-ignore-case"
                }
            },
            {
                "what": "Match whole words",
                "how": {
                    "ack,ag,freebsd,git,gnu,netbsd,osx,rg": "-w --word-regexp",
                    "bsd": "-w"
                }
            },
            {
                "what": "Invert match",
                "how": {
                    "ack,ag,freebsd,git,gnu,netbsd,osx,rg": "-v --invert-match",
                    "bsd,posix": "-v"
                }
            },
            {
                "what": "Match entire line only",
                "how": {
                    "freebsd,gnu,netbsd,osx,rg": "-x --line-regexp",
                    "bsd,posix": "-x"
                }
            },
            {
                "what": "Specify pattern explicitly",
                "how": {
                    "ack": "--match",
                    "git": "-e",
                    "freebsd,gnu,osx,rg": "-e --regexp",
                    "bsd,posix": "-e"
                }
            },
            {
                "what": "Read patterns from a file",
                "how": {
                    "git": "-f",
                    "freebsd,gnu,osx,rg": "-f --file",
                    "bsd,posix": "-f"
                }
            },
            {
                "what": "Specify multiple patterns with boolean expressions",
                "how": {
                    "git": "--and --or --not --all-match"
                }
            },
            {
                "what": "Match patterns across newlines",
                "how": {
                    "ag": "--[no-]multiline",
                    "rg": "-U --multiline"
                }
            },
            {
                "what": "Print specific lines by number",
                "how": {
                    "ack": "--lines"
                }
            }
        ]
    },
    {
        "section": "Regular expressions",
        "type": "options",
        "abilities": [
            {
                "what": "Use fixed strings, not regular expressions, for a literal match",
                "how": {
                    "ack": "-Q --literal",
                    "ag": "-Q --literal -F --fixed-strings",
                    "freebsd,git,osx,rg": "-F --fixed-strings",
                    "gnu": "-F --fixed-strings --fixed-regexp",
                    "posix": "-F"
                }
            },
            {
                "what": "Use basic regular expressions",
                "how": {
                    "freebsd,git,gnu,osx": "-G --basic-regexp"
                }
            },
            {
                "what": "Use extended regular expressions",
                "how": {
                    "freebsd,git,gnu,osx": "-E --extended-regexp",
                    "posix": "-E"
                }
            },
            {
                "what": "Use Perl (or Perl-compatible) regular expressions",
                "how": {
                    "ack": "always",
                    "ag": "always",
                    "git": "-P --perl-regexp",
                    "gnu": "-P --perl-regexp (experimental)",
                    "rg": "-P --pcre2 (always) --auto-hybrid-regex (if necessary)"
                }
            }
        ]
    },
    {
        "section": "Search output",
        "type": "options",
        "abilities": [
            {
                "what": "Print only filenames that contain matches",
                "how": {
                    "ack,ag,freebsd,git,gnu,rg": "-l --files-with-matches",
                    "bsd,posix": "-l"
                }
            },
            {
                "what": "Print only filenames that do not contain matches",
                "how": {
                    "ack,ag,freebsd,git,gnu": "-L --files-without-match",
                    "rg": "--files-without-match"
                }
            },
            {
                "what": "Show only the part of a line that matched",
                "how": {
                    "ack": "-o",
                    "ag,freebsd,gnu,osx,rg": "-o --only-matching"
                }
            },
            {
                "what": "Specify output for each line match",
                "how": {
                    "ack": "--output",
                    "rg": "-r --replace"
                }
            },
            {
                "what": "Print the filename for each match",
                "how": {
                    "ack,freebsd,gnu,rg": "-H --with-filename",
                    "ag": "--[no-]filename",
                    "git,osx": "-H"
                }
            },
            {
                "what": "Suppress the prefixing filename on output",
                "how": {
                    "ack,freebsd,gnu,osx": "-h --no-filename",
                    "ag": "--no-filename",
                    "git": "-h",
                    "rg": "-I --no-filename"
                }
            },
            {
                "what": "Print paths relative to the project top directory",
                "how": {
                    "git": "--full-name"
                }
            },
            {
                "what": "Prefix the line number to matching lines",
                "how": {
                    "ag": "--[no-]numbers",
                    "freebsd,git,gnu,rg": "-n --line-number",
                    "bsd,posix": "-n"
                }
            },
            {
                "what": "Suppress line numbers",
                "how": {
                    "ag": "--no-numbers",
                    "rg": "-N --no-line-number",
                    "git": "--no-line-number"
                }
            },
            {
                "what": "Print a heading of each file's name before its matches",
                "how": {
                    "ack,git,rg": "--[no-]heading",
                    "ag": "-H --[no-]heading"
                }
            },
            {
                "what": "Specify filename to show for matches on STDIN",
                "how": {
                    "freebsd,gnu": "--label"
                }
            },
            {
                "what": "Show the column number of the first match",
                "how": {
                    "ack": "--[no-]column",
                    "ag,rg": "--column"
                }
            },
            {
                "what": "Print lines of context after matches",
                "how": {
                    "ack,ag,git,gnu,rg": "-A --after",
                    "freebsd,netbsd,osx": "-A --after-context"
                }
            },
            {
                "what": "Print lines of context before matches",
                "how": {
                    "ack,ag,git,gnu,rg": "-B --before",
                    "netbsd,freebsd": "-B --before-context"
                }
            },
            {
                "what": "Print lines of context before and after matches",
                "how": {
                    "ack,ag,freebsd,git,gnu,rg": "-C --context",
                    "osx": "--context"
                }
            },
            {
                "what": "Show number of lines matching per file",
                "how": {
                    "ack,ag,freebsd,git,gnu,osx,rg": "-c --count",
                    "bsd,posix": "-c"
                }
            },
            {
                "what": "Print null byte as separator between filenames",
                "how": {
                    "ack": "--print0",
                    "ag": "-0 --null --print0",
                    "freebsd": "--null",
                    "git,netbsd": "-z --null",
                    "gnu": "-Z --null",
                    "rg": "-0 --null"
                }
            },
            {
                "what": "Stop searching in each file after NUM matches",
                "how": {
                    "ack,ag,freebsd,gnu,osx,rg": "-m --max-count"
                }
            },
            {
                "what": "Stop searching after one match of any kind",
                "how": {
                    "ack": "-1"
                }
            },
            {
                "what": "Print the byte offset within the file before each line",
                "how": {
                    "freebsd,gnu,netbsd": "-b --byte-offset -u --unix-byte-offsets",
                    "osx,rg": "-b --byte-offset"
                }
            },
            {
                "what": "Print the block number the file before each line",
                "how": {
                    "bsd": "-b"
                }
            },
            {
                "what": "Suppress error messages about nonexistent or unreadable files",
                "how": {
                    "ack,gnu": "-s",
                    "ag": "--silent",
                    "freebsd,gnu,osx": "-s --no-messages",
                    "bsd,posix": "-s",
                    "rg": "--no-messages"
                }
            },
            {
                "what": "Limit length of output lines",
                "how": {
                    "ag": "-W --width",
                    "rg": "-M --max-columns"
                }
            },
            {
                "what": "Do not output matched lines",
                "how": {
                    "git,rg": "-q --quiet",
                    "freebsd,gnu,osx": "-q --quiet --silent",
                    "posix": "-q"
                }
            },
            {
                "what": "Print stats (files scanned, time taken, etc.)",
                "how": {
                    "ag": "--stats --stats-only",
                    "rg": "--stats"
                }
            }
        ]
    },
    {
        "section": "File presentation",
        "type": "options",
        "abilities": [
            {
                "what": "Enable color output",
                "how": {
                    "ack,ag,git,gnu,rg": "--color",
                    "freebsd,osx": "--color --colour"
                }
            },
            {
                "what": "Underline matches",
                "how": {
                    "ack": "--underline"
                }
            },
            {
                "what": "Set colors for various output items",
                "how": {
                    "ack": "--color-match --color-filename --color-lineno --color-colno",
                    "ag": "--color-match --color-path --color-line-number",
                    "git": "Specified in the .gitconfig file",
                    "gnu": "Specified in GREP_COLORS environment variable",
                    "rg": "--colors"
                }
            },
            {
                "what": "Pipe output through a pager or other command",
                "how": {
                    "ack": "--[no-]pager",
                    "git": "-O --open-files-in-pager"
                }
            },
            {
                "what": "Separate match output with blank lines unless they are on adjacent lines",
                "how": {
                    "ack": "--[no-]proximate"
                }
            },
            {
                "what": "Group together all matches in a file",
                "how": {
                    "ack,ag": "--[no-]group",
                    "rg": "--heading"
                }
            },
            {
                "what": "Specify group separator",
                "how": {
                    "gnu": "--[no-]group-separator"
                }
            },
            {
                "what": "Show the function name of the match",
                "how": {
                    "git": "-p --show-function"
                }
            },
            {
                "what": "Show the function in which a match was found",
                "how": {
                    "git": "-W --function-context"
                }
            },
            {
                "what": "Print a break between results from different files",
                "how": {
                    "ack,ag": "--[no-]break"
                }
            },
            {
                "what": "Flush output on every line",
                "how": {
                    "ack": "--flush",
                    "freebsd,gnu,osx,rg": "--line-buffered"
                }
            }
        ]
    },
    {
        "section": "File finding",
        "type": "options",
        "abilities": [
            {
                "what": "Only print the files selected, without searching",
                "how": {
                    "ack": "-f",
                    "rg": "--files"
                }
            },
            {
                "what": "Show which types each file has",
                "how": {
                    "ack": "--show-types"
                }
            },
            {
                "what": "List searchable files that match a pattern",
                "how": {
                    "ack,ag": "-g",
                    "rg": "-g --glob"
                }
            },
            {
                "what": "Read the list of files to search from FILE",
                "how": {
                    "ack": "--files-from"
                }
            },
            {
                "what": "Sort the found files lexically",
                "how": {
                    "ack": "--sort-files",
                    "rg": "--sort path"
                }
            },
            {
                "what": "Read the list of files to search from STDIN",
                "how": {
                    "ack": "-x"
                }
            },
            {
                "what": "Limit search to filenames matching a pattern",
                "how": {
                    "ag": "-G --file-search-regex",
                    "rg": "-g --glob"
                }
            },
            {
                "what": "Search hidden files",
                "how": {
                    "ag,rg": "--hidden",
                    "git,gnu": "yes"
                }
            }
        ]
    },
    {
        "section": "File inclusion/exclusion",
        "type": "options",
        "abilities": [
            {
                "what": "Search only files of a given type",
                "how": {
                    "ack": "--type=X --X (where X is a filetype)",
                    "ag": "--X (where X is a filetype)",
                    "rg": "-t --type"
                }
            },
            {
                "what": "Exclude files of a given type",
                "how": {
                    "ack": "--type=noX --noX (where X is a filetype)",
                    "rg": "-T --type-not"
                }
            },
            {
                "what": "Recurse into subdirectories",
                "how": {
                    "ack": "-r -R --[no-]recurse",
                    "ag": "-r --recurse",
                    "gnu": "-r --recursive",
                    "git": "yes",
                    "freebsd,osx": "-r -R --recursive -d recurse --directories=recurse",
                    "rg": "yes, up to --max-depth"
                }
            },
            {
                "what": "Recurse into subdirectories, following symlinks",
                "how": {
                    "gnu": "-R --dereference-recursive",
                    "rg": "-L --follow"
                }
            },
            {
                "what": "No descending into subdirectories",
                "how": {
                    "ack": "-n --no-recurse",
                    "ag": "-n --norecurse",
                    "rg": "--max-depth 1",
                    "freebsd,osx": "-d skip --directories=skip"
                }
            },
            {
                "what": "Read directory as a file",
                "how": {
                    "freebsd,osx": "-d read --directories=read"
                }
            },
            {
                "what": "Add/remove directory from list of ignored dirs",
                "how": {
                    "ack": "--[no-]ignore-dir",
                    "ag": "--ignore-dir",
                    "rg": "-g --glob"
                }
            },
            {
                "what": "Don't respect ignore files (.gitignore, .ignore, etc)",
                "how": {
                    "rg": "--no-ignore --no-ignore-dot --no-ignore-parent --no-ignore-vcs"
                }
            },
            {
                "what": "Ignore files larger than a given size",
                "how": {
                    "rg": "--max-filesize"
                }
            },
            {
                "what": "Specify files to search",
                "how": {
                    "gnu": "--include",
                    "osx": "--include --include-dir",
                    "freebsd": "--include DIR_PATTERN",
                    "rg": "-g --glob --iglob"
                }
            },
            {
                "what": "Ignore files/directories matching",
                "how": {
                    "ag": "--ignore",
                    "gnu": "--exclude --exclude-from --exclude-dir",
                    "freebsd": "--exclude DIR_PATTERN",
                    "osx": "--exclude --exclude-dir",
                    "rg": "-g --glob"
                }
            },
            {
                "what": "Add filter for ignoring files",
                "how": {
                    "ack": "--ignore-file FILTER:ARGS",
                    "rg": "--ignore-file PATH/TO/.IGNORE"
                }
            },
            {
                "what": "Include only files of recognized types",
                "how": {
                    "ack": "-k --known-types",
                    "rg": "-t all"
                }
            },
            {
                "what": "Follow symlinks",
                "how": {
                    "ack": "--[no-]follow",
                    "ag": "-f --follow",
                    "rg": "-L --follow",
                    "osx": "-O -S"
                }
            },
            {
                "what": "Don't follow links to other devices",
                "how": {
                    "ag": "--one-device",
                    "gnu": "--devices=skip",
                    "rg": "--one-file-system",
                    "osx": "-p"
                }
            },
            {
                "what": "Specify the demanded action for devices, FIFOs and sockets",
                "how": {
                    "freebsd,osx": "-D --devices"
                }
            },
            {
                "what": "Search all types of files",
                "how": {
                    "ag": "-a --all-types"
                }
            },
            {
                "what": "Limit directory search depth",
                "how": {
                    "ag": "--depth",
                    "git": "--max-depth",
                    "rg": "--maxdepth"
                }
            },
            {
                "what": "Search binary files",
                "how": {
                    "ag,rg": "--binary",
                    "freebsd,netbsd,osx": "-a --text"
                }
            },
            {
                "what": "Treat files as binary",
                "how": {
                    "gnu": "-U --binary",
                    "freebsd,osx": "-a --text --binary-files=binary -U --binary"
                }
            },
            {
                "what": "Don't search in binary files",
                "how": {
                    "git": "-I",
                    "freebsd,osx": "-I --binary-files=without-match"
                }
            },
            {
                "what": "Treat binary files as if they were text",
                "how": {
                    "git,rg": "-a --text",
                    "freebsd": "-a --text --binary-files=text"
                }
            },
            {
                "what": "Search all text files",
                "how": {
                    "ag": "-t --all-text",
                    "rg": "-t txt"
                }
            },
            {
                "what": "Search all files",
                "how": {
                    "ag,rg": "-u --unrestricted"
                }
            },
            {
                "what": "Skip rules found in VCS ignore files (.gitignore, .hgignore, etc)",
                "how": {
                    "ag": "-U --skip-vcs-ignores",
                    "git": "--exclude-standard",
                    "rg": "--no-ignore-vcs"
                }
            },
            {
                "what": "Decompress the input data before searching",
                "how": {
                    "freebsd,osx": "-Z --decompress -J --bz2decompress"
                }
            }
        ]
    },
    {
        "section": "File type specification",
        "type": "options",
        "abilities": [
            {
                "what": "Create a filetype, replacing the previous specs",
                "how": {
                    "ack": "--type-set"
                }
            },
            {
                "what": "Add specifications to an existing filetype",
                "how": {
                    "ack,rg": "--type-add"
                }
            },
            {
                "what": "Remove a file type",
                "how": {
                    "ack": "--type-del",
                    "rg": "--type-clear"
                }
            },
            {
                "what": "Ignore default type definitions",
                "how": {
                    "ack": "--ignore-ack-defaults"
                }
            },
            {
                "what": "Display all known types",
                "how": {
                    "ack": "--help-types",
                    "ag": "--list-file-types",
                    "rg": "--type-list"
                }
            }
        ]
    },
    {
        "section": "Miscellaneous",
        "type": "options",
        "abilities": [
            {
                "what": "Print all lines, whether matching or not",
                "how": {
                    "ack": "--passthru",
                    "ag": "--passthrough",
                    "rg": "--passthru"
                }
            },
            {
                "what": "Outputs a default ackrc for your customization to standard output",
                "how": {
                    "ack": "--create-ackrc"
                }
            },
            {
                "what": "Dump information on which options are loaded",
                "how": {
                    "ack": "--dump",
                    "rg": "--debug"
                }
            },
            {
                "what": "Specify a configuration file to use",
                "how": {
                    "ack": "--ackrc"
                }
            },
            {
                "what": "Ignore environment variables and global configuration files",
                "how": {
                    "ack": "--env",
                    "rg": "--no-config"
                }
            },
            {
                "what": "Treat standard input as a pipe",
                "how": {
                    "ack": "--[no-]filter"
                }
            },
            {
                "what": "Search contents of compressed files (e.g. gzip)",
                "how": {
                    "ag,rg": "-z --search-zip"
                }
            },
            {
                "what": "Specify input file encoding",
                "how": {
                    "rg": "-E --encoding"
                }
            },
            {
                "what": "use the mmap(2) system call to read  input",
                "how": {
                    "freebsd,osx": "--mmap"
                }
            }
        ]
    }
]
